"use strict";(self.webpackChunkdocs_nestjs_com=self.webpackChunkdocs_nestjs_com||[]).push([[177],{177:(S,v,i)=>{i.r(v),i.d(v,{WebsocketsModule:()=>A});var o=i(1180),w=i(6895),r=i(6641),k=i(4466),c=i(4834),e=i(1571),p=i(4336),U=i(4521),y=i(7297);class d extends c.y{}(0,o.Z)(d,"\u0275fac",function(){let t;return function(s){return(t||(t=e.n5z(d)))(s||d)}}()),(0,o.Z)(d,"\u0275cmp",e.Xpm({type:d,selectors:[["app-adapter"]],features:[e.qOj],decls:188,vars:10,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/websockets/adapter.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","adapters"],["appAnchor","","id","extend-socketio"],["rel","nofollow","target","_blank","href","https://github.com/socketio/socket.io"],[1,"warning"],["rel","nofollow","target","_blank","href","https://socket.io/docs/v4/using-multiple-nodes/#enabling-sticky-session"],[1,"language-bash"],[1,"language-typescript"],["appAnchor","","id","ws-library"],["rel","nofollow","target","_blank","href","https://github.com/websockets/ws"],[1,"info"],["appAnchor","","id","advanced-custom-adapter"],[1,"filename"],["appdac39c591fb18ba44460b7991d7548bcd6cfb7bb",""],["app27e9a5bd33cda25351ae807e38e5b06e2bce0c0b",""],["appAnchor","","id","example"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/nest/tree/master/sample/16-gateways-ws"]],template:function(n,s){if(1&n&&(e.TgZ(0,"div",0,1)(2,"div",2)(3,"a",3),e._UZ(4,"i",4),e.qZA()(),e.TgZ(5,"h3",5),e._uU(6,"Adapters"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"The WebSockets module is platform-agnostic, hence, you can bring your own library (or even a native implementation) by making use of "),e.TgZ(9,"code"),e._uU(10,"WebSocketAdapter"),e.qZA(),e._uU(11," interface. This interface forces to implement few methods described in the following table:"),e.qZA(),e.TgZ(12,"table")(13,"tr")(14,"td")(15,"code"),e._uU(16,"create"),e.qZA()(),e.TgZ(17,"td"),e._uU(18,"Creates a socket instance based on passed arguments"),e.qZA()(),e.TgZ(19,"tr")(20,"td")(21,"code"),e._uU(22,"bindClientConnect"),e.qZA()(),e.TgZ(23,"td"),e._uU(24,"Binds the client connection event"),e.qZA()(),e.TgZ(25,"tr")(26,"td")(27,"code"),e._uU(28,"bindClientDisconnect"),e.qZA()(),e.TgZ(29,"td"),e._uU(30,"Binds the client disconnection event (optional*)"),e.qZA()(),e.TgZ(31,"tr")(32,"td")(33,"code"),e._uU(34,"bindMessageHandlers"),e.qZA()(),e.TgZ(35,"td"),e._uU(36,"Binds the incoming message to the corresponding message handler"),e.qZA()(),e.TgZ(37,"tr")(38,"td")(39,"code"),e._uU(40,"close"),e.qZA()(),e.TgZ(41,"td"),e._uU(42,"Terminates a server instance"),e.qZA()()(),e.TgZ(43,"h4",6)(44,"span"),e._uU(45,"Extend socket.io"),e.qZA()(),e.TgZ(46,"p"),e._uU(47,"The "),e.TgZ(48,"a",7),e._uU(49,"socket.io"),e.qZA(),e._uU(50," package is wrapped in an "),e.TgZ(51,"code"),e._uU(52,"IoAdapter"),e.qZA(),e._uU(53," class. What if you would like to enhance the basic functionality of the adapter? For instance, your technical requirements require a capability to broadcast events across multiple load-balanced instances of your web service. For this, you can extend "),e.TgZ(54,"code"),e._uU(55,"IoAdapter"),e.qZA(),e._uU(56," and override a single method which responsibility is to instantiate new socket.io servers. But first of all, let's install the required package."),e.qZA(),e.TgZ(57,"blockquote",8)(58,"strong"),e._uU(59,"Warning"),e.qZA(),e._uU(60," To use socket.io with multiple load-balanced instances you either have to disable polling by setting "),e.TgZ(61,"code"),e._uU(62,"transports: ['websocket']"),e.qZA(),e._uU(63," in your clients socket.io configuration or you have to enable cookie based routing in your load balancer. Redis alone is not enough. See "),e.TgZ(64,"a",9),e._uU(65,"here"),e.qZA(),e._uU(66," for more information.\n"),e.qZA(),e.TgZ(67,"pre")(68,"code",10),e._uU(69,"\n$ npm i --save redis socket.io @socket.io/redis-adapter\n"),e.qZA()(),e.TgZ(70,"p"),e._uU(71,"Once the package is installed, we can create a "),e.TgZ(72,"code"),e._uU(73,"RedisIoAdapter"),e.qZA(),e._uU(74," class."),e.qZA(),e.TgZ(75,"pre")(76,"code",11),e._uU(77,"\nimport { IoAdapter } from '@nestjs/platform-socket.io';\nimport { ServerOptions } from 'socket.io';\nimport { createAdapter } from '@socket.io/redis-adapter';\nimport { createClient } from 'redis';\n\nexport class RedisIoAdapter extends IoAdapter {\n  private adapterConstructor: ReturnType<typeof createAdapter>;\n\n  async connectToRedis(): Promise<void> {\n    const pubClient = createClient({ url: `redis://localhost:6379` });\n    const subClient = pubClient.duplicate();\n\n    await Promise.all([pubClient.connect(), subClient.connect()]);\n\n    this.adapterConstructor = createAdapter(pubClient, subClient);\n  }\n\n  createIOServer(port: number, options?: ServerOptions): any {\n    const server = super.createIOServer(port, options);\n    server.adapter(this.adapterConstructor);\n    return server;\n  }\n}\n"),e.qZA()(),e.TgZ(78,"p"),e._uU(79,"Afterward, simply switch to your newly created Redis adapter."),e.qZA(),e.TgZ(80,"pre")(81,"code",11),e._uU(82,"\nconst app = await NestFactory.create(AppModule);\nconst redisIoAdapter = new RedisIoAdapter(app);\nawait redisIoAdapter.connectToRedis();\n\napp.useWebSocketAdapter(redisIoAdapter);\n"),e.qZA()(),e.TgZ(83,"h4",12)(84,"span"),e._uU(85,"Ws library"),e.qZA()(),e.TgZ(86,"p"),e._uU(87,"Another available adapter is a "),e.TgZ(88,"code"),e._uU(89,"WsAdapter"),e.qZA(),e._uU(90," which in turn acts like a proxy between the framework and integrate blazing fast and thoroughly tested "),e.TgZ(91,"a",13),e._uU(92,"ws"),e.qZA(),e._uU(93," library. This adapter is fully compatible with native browser WebSockets and is far faster than socket.io package. Unluckily, it has significantly fewer functionalities available out-of-the-box. In some cases, you may just don't necessarily need them though."),e.qZA(),e.TgZ(94,"blockquote",14)(95,"strong"),e._uU(96,"Hint"),e.qZA(),e.TgZ(97,"code"),e._uU(98,"ws"),e.qZA(),e._uU(99," library does not support namespaces (communication channels popularised by "),e.TgZ(100,"code"),e._uU(101,"socket.io"),e.qZA(),e._uU(102,"). However, to somehow mimic this feature, you can mount multiple "),e.TgZ(103,"code"),e._uU(104,"ws"),e.qZA(),e._uU(105," servers on different paths (example: "),e.TgZ(106,"code"),e._uU(107),e.qZA(),e._uU(108,").\n"),e.qZA(),e.TgZ(109,"p"),e._uU(110,"In order to use "),e.TgZ(111,"code"),e._uU(112,"ws"),e.qZA(),e._uU(113,", we firstly have to install the required package:"),e.qZA(),e.TgZ(114,"pre")(115,"code",10),e._uU(116,"\n$ npm i --save @nestjs/platform-ws\n"),e.qZA()(),e.TgZ(117,"p"),e._uU(118,"Once the package is installed, we can switch an adapter:"),e.qZA(),e.TgZ(119,"pre")(120,"code",11),e._uU(121,"\nconst app = await NestFactory.create(AppModule);\napp.useWebSocketAdapter(new WsAdapter(app));\n"),e.qZA()(),e.TgZ(122,"blockquote",14)(123,"strong"),e._uU(124,"Hint"),e.qZA(),e._uU(125," The "),e.TgZ(126,"code"),e._uU(127,"WsAdapter"),e.qZA(),e._uU(128," is imported from "),e.TgZ(129,"code"),e._uU(130,"@nestjs/platform-ws"),e.qZA(),e._uU(131,".\n"),e.qZA(),e.TgZ(132,"h4",15)(133,"span"),e._uU(134,"Advanced (custom adapter)"),e.qZA()(),e.TgZ(135,"p"),e._uU(136,"For demonstration purposes, we are going to integrate the "),e.TgZ(137,"a",13),e._uU(138,"ws"),e.qZA(),e._uU(139," library manually. As mentioned, the adapter for this library is already created and is exposed from the "),e.TgZ(140,"code"),e._uU(141,"@nestjs/platform-ws"),e.qZA(),e._uU(142," package as a "),e.TgZ(143,"code"),e._uU(144,"WsAdapter"),e.qZA(),e._uU(145," class. Here is how the simplified implementation could potentially look like:"),e.qZA(),e.TgZ(146,"span",16),e._uU(147),e.ALo(148,"extension"),e._UZ(149,"app-tabs",null,17),e.qZA(),e.TgZ(151,"pre")(152,"code",11),e._uU(153,"\nimport * as WebSocket from 'ws';\nimport { WebSocketAdapter, INestApplicationContext } from '@nestjs/common';\nimport { MessageMappingProperties } from '@nestjs/websockets';\nimport { Observable, fromEvent, EMPTY } from 'rxjs';\nimport { mergeMap, filter } from 'rxjs/operators';\n\nexport class WsAdapter implements WebSocketAdapter {\n  constructor(private app: INestApplicationContext) {}\n\n  create(port: number, options: any = {}): any {\n    return new WebSocket.Server({ port, ...options });\n  }\n\n  bindClientConnect(server, callback: Function) {\n    server.on('connection', callback);\n  }\n\n  bindMessageHandlers(\n    client: WebSocket,\n    handlers: MessageMappingProperties[],\n    process: (data: any) => Observable<any>,\n  ) {\n    fromEvent(client, 'message')\n      .pipe(\n        mergeMap(data => this.bindMessageHandler(data, handlers, process)),\n        filter(result => result),\n      )\n      .subscribe(response => client.send(JSON.stringify(response)));\n  }\n\n  bindMessageHandler(\n    buffer,\n    handlers: MessageMappingProperties[],\n    process: (data: any) => Observable<any>,\n  ): Observable<any> {\n    const message = JSON.parse(buffer.data);\n    const messageHandler = handlers.find(\n      handler => handler.message === message.event,\n    );\n    if (!messageHandler) {\n      return EMPTY;\n    }\n    return process(messageHandler.callback(message.data));\n  }\n\n  close(server) {\n    server.close();\n  }\n}\n"),e.qZA()(),e.TgZ(154,"blockquote",14)(155,"strong"),e._uU(156,"Hint"),e.qZA(),e._uU(157," When you want to take advantage of "),e.TgZ(158,"a",13),e._uU(159,"ws"),e.qZA(),e._uU(160," library, use built-in "),e.TgZ(161,"code"),e._uU(162,"WsAdapter"),e.qZA(),e._uU(163," instead of creating your own one.\n"),e.qZA(),e.TgZ(164,"p"),e._uU(165,"Then, we can set up a custom adapter using "),e.TgZ(166,"code"),e._uU(167,"useWebSocketAdapter()"),e.qZA(),e._uU(168," method:"),e.qZA(),e.TgZ(169,"span",16),e._uU(170),e.ALo(171,"extension"),e._UZ(172,"app-tabs",null,18),e.qZA(),e.TgZ(174,"pre")(175,"code",11),e._uU(176,"\nconst app = await NestFactory.create(AppModule);\napp.useWebSocketAdapter(new WsAdapter(app));\n"),e.qZA()(),e.TgZ(177,"h4",19)(178,"span"),e._uU(179,"Example"),e.qZA()(),e.TgZ(180,"p"),e._uU(181,"A working example that uses "),e.TgZ(182,"code"),e._uU(183,"WsAdapter"),e.qZA(),e._uU(184," is available "),e.TgZ(185,"a",20),e._uU(186,"here"),e.qZA(),e._uU(187,"."),e.qZA()()),2&n){const a=e.MAs(150),m=e.MAs(173);e.xp6(107),e.AsE("@WebSocketGateway(","{"," path: '/users' ","}",")"),e.xp6(40),e.hij(" ",e.xi3(148,4,"ws-adapter",a.isJsActive),"\n"),e.xp6(23),e.hij(" ",e.xi3(171,7,"main",m.isJsActive),"\n")}},dependencies:[p.n,U.U,y.F],encapsulation:2,changeDetection:0}));class u extends c.y{}(0,o.Z)(u,"\u0275fac",function(){let t;return function(s){return(t||(t=e.n5z(u)))(s||u)}}()),(0,o.Z)(u,"\u0275cmp",e.Xpm({type:u,selectors:[["app-exception-filters"]],features:[e.qOj],decls:80,vars:4,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/websockets/exception-filters.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","exception-filters"],["routerLink","/exception-filters"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","filters"],["appAnchor","","id","inheritance"],[1,"filename"],["app13885e120651ca9a4d34464eb3b497b66bccde81",""]],template:function(n,s){if(1&n&&(e.TgZ(0,"div",0,1)(2,"div",2)(3,"a",3),e._UZ(4,"i",4),e.qZA()(),e.TgZ(5,"h3",5),e._uU(6,"Exception filters"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"The only difference between the HTTP "),e.TgZ(9,"a",6),e._uU(10,"exception filter"),e.qZA(),e._uU(11," layer and the corresponding web sockets layer is that instead of throwing "),e.TgZ(12,"code"),e._uU(13,"HttpException"),e.qZA(),e._uU(14,", you should use "),e.TgZ(15,"code"),e._uU(16,"WsException"),e.qZA(),e._uU(17,"."),e.qZA(),e.TgZ(18,"pre")(19,"code",7),e._uU(20,"\nthrow new WsException('Invalid credentials.');\n"),e.qZA()(),e.TgZ(21,"blockquote",8)(22,"strong"),e._uU(23,"Hint"),e.qZA(),e._uU(24," The "),e.TgZ(25,"code"),e._uU(26,"WsException"),e.qZA(),e._uU(27," class is imported from the "),e.TgZ(28,"code"),e._uU(29,"@nestjs/websockets"),e.qZA(),e._uU(30," package.\n"),e.qZA(),e.TgZ(31,"p"),e._uU(32,"With the sample above, Nest will handle the thrown exception and emit the "),e.TgZ(33,"code"),e._uU(34,"exception"),e.qZA(),e._uU(35," message with the following structure:"),e.qZA(),e.TgZ(36,"pre")(37,"code",7),e._uU(38,"\n{\n  status: 'error',\n  message: 'Invalid credentials.'\n}\n"),e.qZA()(),e.TgZ(39,"h4",9)(40,"span"),e._uU(41,"Filters"),e.qZA()(),e.TgZ(42,"p"),e._uU(43,"Web sockets exception filters behave equivalently to HTTP exception filters. The following example uses a manually instantiated method-scoped filter. Just as with HTTP based applications, you can also use gateway-scoped filters (i.e., prefix the gateway class with a "),e.TgZ(44,"code"),e._uU(45,"@UseFilters()"),e.qZA(),e._uU(46," decorator)."),e.qZA(),e.TgZ(47,"pre")(48,"code",7),e._uU(49,"\n@UseFilters(new WsExceptionFilter())\n@SubscribeMessage('events')\nonEvent(client, data: any): WsResponse<any> {\n  const event = 'events';\n  return { event, data };\n}\n"),e.qZA()(),e.TgZ(50,"h4",10)(51,"span"),e._uU(52,"Inheritance"),e.qZA()(),e.TgZ(53,"p"),e._uU(54,"Typically, you'll create fully customized exception filters crafted to fulfill your application requirements. However, there might be use-cases when you would like to simply extend the "),e.TgZ(55,"strong"),e._uU(56,"core exception filter"),e.qZA(),e._uU(57,", and override the behavior based on certain factors."),e.qZA(),e.TgZ(58,"p"),e._uU(59,"In order to delegate exception processing to the base filter, you need to extend "),e.TgZ(60,"code"),e._uU(61,"BaseWsExceptionFilter"),e.qZA(),e._uU(62," and call the inherited "),e.TgZ(63,"code"),e._uU(64,"catch()"),e.qZA(),e._uU(65," method."),e.qZA(),e.TgZ(66,"span",11),e._UZ(67,"app-tabs",null,12),e.qZA(),e.TgZ(69,"pre")(70,"code",7),e._uU(71,"\nimport { Catch, ArgumentsHost } from '@nestjs/common';\nimport { BaseWsExceptionFilter } from '@nestjs/websockets';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseWsExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    super.catch(exception, host);\n  }\n}\n"),e.qZA()(),e.TgZ(72,"pre")(73,"code",7),e._uU(74,"\nimport { Catch } from '@nestjs/common';\nimport { BaseWsExceptionFilter } from '@nestjs/websockets';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseWsExceptionFilter {\n  catch(exception, host) {\n    super.catch(exception, host);\n  }\n}\n"),e.qZA()(),e.TgZ(75,"p"),e._uU(76,"The above implementation is just a shell demonstrating the approach. Your implementation of the extended exception filter would include your tailored "),e.TgZ(77,"strong"),e._uU(78,"business logic"),e.qZA(),e._uU(79," (e.g., handling various conditions)."),e.qZA()()),2&n){const a=e.MAs(68);e.xp6(69),e.ekj("hide",a.isJsActive),e.xp6(3),e.ekj("hide",!a.isJsActive)}},dependencies:[p.n,U.U,r.rH],encapsulation:2,changeDetection:0}));var x=i(8568);class l extends c.y{}(0,o.Z)(l,"\u0275fac",function(){let t;return function(s){return(t||(t=e.n5z(l)))(s||l)}}()),(0,o.Z)(l,"\u0275cmp",e.Xpm({type:l,selectors:[["app-gateways"]],features:[e.qOj],decls:370,vars:56,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/websockets/gateways.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","gateways"],["rel","nofollow","target","_blank","href","https://github.com/socketio/socket.io"],["rel","nofollow","target","_blank","href","https://github.com/websockets/ws"],["routerLink","/websockets/adapter"],["src","/assets/Gateways_1.png"],[1,"info"],["routerLink","/providers"],["appAnchor","","id","installation"],[1,"filename"],["app476b1a1a70f4a2fc1111bc03e731c8a23b33cc6d",""],[1,"language-typescript"],["appAnchor","","id","overview"],["rel","nofollow","target","_blank","href","https://socket.io/docs/v4/namespaces/"],[1,"warning"],["rel","nofollow","target","_blank","href","https://socket.io/docs/v4/server-options/"],["appd03bc8f24308f7dd0ff09cb2c9395995a4be059f",""],["app89961d273c5cc77a04c80ec1e1af75960bd24db8",""],["appb123ef393a24d81a6e73d8f0d65186cdf6622d5a",""],["app7f5df9b21d9d0f17d0ee2986aac774a044b70716",""],["rel","nofollow","target","_blank","href","https://socket.io/docs/v4/server-api/#socket"],["app56d2eb0be2f60cbf8bea30921e02d112b01cb339",""],["appAnchor","","id","multiple-responses"],["app4d414be98c944bba91bd7ecb5c29b60230479a9d",""],["appAnchor","","id","asynchronous-responses"],["app8e5c8cd51ddd2f8066a9ce0bb578cdb43821ac4b",""],["appAnchor","","id","lifecycle-hooks"],["appAnchor","","id","server"],["appAnchor","","id","example"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/nest/tree/master/sample/02-gateways"]],template:function(n,s){if(1&n&&(e.TgZ(0,"div",0,1)(2,"div",2)(3,"a",3),e._UZ(4,"i",4),e.qZA()(),e.TgZ(5,"h3",5),e._uU(6,"Gateways"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"Most of the concepts discussed elsewhere in this documentation, such as dependency injection, decorators, exception filters, pipes, guards and interceptors, apply equally to gateways. Wherever possible, Nest abstracts implementation details so that the same components can run across HTTP-based platforms, WebSockets, and Microservices. This section covers the aspects of Nest that are specific to WebSockets."),e.qZA(),e.TgZ(9,"p"),e._uU(10,"In Nest, a gateway is simply a class annotated with "),e.TgZ(11,"code"),e._uU(12,"@WebSocketGateway()"),e.qZA(),e._uU(13," decorator. Technically, gateways are platform-agnostic which makes them compatible with any WebSockets library once an adapter is created. There are two WS platforms supported out-of-the-box: "),e.TgZ(14,"a",6),e._uU(15,"socket.io"),e.qZA(),e._uU(16," and "),e.TgZ(17,"a",7),e._uU(18,"ws"),e.qZA(),e._uU(19,". You can choose the one that best suits your needs. Also, you can build your own adapter by following this "),e.TgZ(20,"a",8),e._uU(21,"guide"),e.qZA(),e._uU(22,"."),e.qZA(),e.TgZ(23,"figure"),e._UZ(24,"img",9),e.qZA(),e.TgZ(25,"blockquote",10)(26,"strong"),e._uU(27,"Hint"),e.qZA(),e._uU(28," Gateways can be treated as "),e.TgZ(29,"a",11),e._uU(30,"providers"),e.qZA(),e._uU(31,"; this means they can inject dependencies through the class constructor. Also, gateways can be injected by other classes (providers and controllers) as well.\n"),e.qZA(),e.TgZ(32,"h4",12)(33,"span"),e._uU(34,"Installation"),e.qZA()(),e.TgZ(35,"p"),e._uU(36,"To start building WebSockets-based applications, first install the required package:"),e.qZA(),e.TgZ(37,"span",13),e._UZ(38,"app-tabs",null,14),e.qZA(),e.TgZ(40,"pre")(41,"code",15),e._uU(42,"\n$ npm i --save @nestjs/websockets @nestjs/platform-socket.io\n"),e.qZA()(),e.TgZ(43,"pre")(44,"code",15),e._uU(45,"\n$ npm i --save @nestjs/websockets @nestjs/platform-socket.io\n"),e.qZA()(),e.TgZ(46,"h4",16)(47,"span"),e._uU(48,"Overview"),e.qZA()(),e.TgZ(49,"p"),e._uU(50,"In general, each gateway is listening on the same port as the "),e.TgZ(51,"strong"),e._uU(52,"HTTP server"),e.qZA(),e._uU(53,", unless your app is not a web application, or you have changed the port manually. This default behavior can be modified by passing an argument to the "),e.TgZ(54,"code"),e._uU(55,"@WebSocketGateway(80)"),e.qZA(),e._uU(56," decorator where "),e.TgZ(57,"code"),e._uU(58,"80"),e.qZA(),e._uU(59," is a chosen port number. You can also set a "),e.TgZ(60,"a",17),e._uU(61,"namespace"),e.qZA(),e._uU(62," used by the gateway using the following construction:"),e.qZA(),e.TgZ(63,"pre")(64,"code",15),e._uU(65,"\n@WebSocketGateway(80, { namespace: 'events' })\n"),e.qZA()(),e.TgZ(66,"blockquote",18)(67,"strong"),e._uU(68,"Warning"),e.qZA(),e._uU(69," Gateways are not instantiated until they are referenced in the providers array of an existing module.\n"),e.qZA(),e.TgZ(70,"p"),e._uU(71,"You can pass any supported "),e.TgZ(72,"a",19),e._uU(73,"option"),e.qZA(),e._uU(74," to the socket constructor with the second argument to the "),e.TgZ(75,"code"),e._uU(76,"@WebSocketGateway()"),e.qZA(),e._uU(77," decorator, as shown below:"),e.qZA(),e.TgZ(78,"pre")(79,"code",15),e._uU(80,"\n@WebSocketGateway(81, { transports: ['websocket'] })\n"),e.qZA()(),e.TgZ(81,"p"),e._uU(82,"The gateway is now listening, but we have not yet subscribed to any incoming messages. Let's create a handler that will subscribe to the "),e.TgZ(83,"code"),e._uU(84,"events"),e.qZA(),e._uU(85," messages and respond to the user with the exact same data."),e.qZA(),e.TgZ(86,"span",13),e._uU(87),e.ALo(88,"extension"),e._UZ(89,"app-tabs",null,20),e.qZA(),e.TgZ(91,"pre")(92,"code",15),e._uU(93,"\n@SubscribeMessage('events')\nhandleEvent(@MessageBody() data: string): string {\n  return data;\n}\n"),e.qZA()(),e.TgZ(94,"pre")(95,"code",15),e._uU(96,"\n@Bind(MessageBody())\n@SubscribeMessage('events')\nhandleEvent(data) {\n  return data;\n}\n"),e.qZA()(),e.TgZ(97,"blockquote",10)(98,"strong"),e._uU(99,"Hint"),e.qZA(),e.TgZ(100,"code"),e._uU(101,"@SubscribeMessage()"),e.qZA(),e._uU(102," and "),e.TgZ(103,"code"),e._uU(104,"@MessageBody()"),e.qZA(),e._uU(105," decorators are imported from "),e.TgZ(106,"code"),e._uU(107,"@nestjs/websockets"),e.qZA(),e._uU(108," package.\n"),e.qZA(),e.TgZ(109,"p"),e._uU(110,"Once the gateway is created, we can register it in our module."),e.qZA(),e.TgZ(111,"span",13),e._uU(112),e.ALo(113,"extension"),e._UZ(114,"app-tabs",null,21),e.qZA(),e.TgZ(116,"pre")(117,"code",15),e._uU(118,"\n@Module({\n  providers: [EventsGateway]\n})\nexport class EventsModule {}\n"),e.qZA()(),e.TgZ(119,"p"),e._uU(120,"You can also pass in a property key to the decorator to extract it from the incoming message body:"),e.qZA(),e.TgZ(121,"span",13),e._uU(122),e.ALo(123,"extension"),e._UZ(124,"app-tabs",null,22),e.qZA(),e.TgZ(126,"pre")(127,"code",15),e._uU(128,"\n@SubscribeMessage('events')\nhandleEvent(@MessageBody('id') id: number): number {\n  // id === messageBody.id\n  return id;\n}\n"),e.qZA()(),e.TgZ(129,"pre")(130,"code",15),e._uU(131,"\n@Bind(MessageBody('id'))\n@SubscribeMessage('events')\nhandleEvent(id) {\n  // id === messageBody.id\n  return id;\n}\n"),e.qZA()(),e.TgZ(132,"p"),e._uU(133,"If you would prefer not to use decorators, the following code is functionally equivalent:"),e.qZA(),e.TgZ(134,"span",13),e._uU(135),e.ALo(136,"extension"),e._UZ(137,"app-tabs",null,23),e.qZA(),e.TgZ(139,"pre")(140,"code",15),e._uU(141,"\n@SubscribeMessage('events')\nhandleEvent(client: Socket, data: string): string {\n  return data;\n}\n"),e.qZA()(),e.TgZ(142,"pre")(143,"code",15),e._uU(144,"\n@SubscribeMessage('events')\nhandleEvent(client, data) {\n  return data;\n}\n"),e.qZA()(),e.TgZ(145,"p"),e._uU(146,"In the example above, the "),e.TgZ(147,"code"),e._uU(148,"handleEvent()"),e.qZA(),e._uU(149," function takes two arguments. The first one is a platform-specific "),e.TgZ(150,"a",24),e._uU(151,"socket instance"),e.qZA(),e._uU(152,", while the second one is the data received from the client. This approach is not recommended though, because it requires mocking the "),e.TgZ(153,"code"),e._uU(154,"socket"),e.qZA(),e._uU(155," instance in each unit test."),e.qZA(),e.TgZ(156,"p"),e._uU(157,"Once the "),e.TgZ(158,"code"),e._uU(159,"events"),e.qZA(),e._uU(160," message is received, the handler sends an acknowledgment with the same data that was sent over the network. In addition, it's possible to emit messages using a library-specific approach, for example, by making use of "),e.TgZ(161,"code"),e._uU(162,"client.emit()"),e.qZA(),e._uU(163," method. In order to access a connected socket instance, use "),e.TgZ(164,"code"),e._uU(165,"@ConnectedSocket()"),e.qZA(),e._uU(166," decorator."),e.qZA(),e.TgZ(167,"span",13),e._uU(168),e.ALo(169,"extension"),e._UZ(170,"app-tabs",null,25),e.qZA(),e.TgZ(172,"pre")(173,"code",15),e._uU(174,"\n@SubscribeMessage('events')\nhandleEvent(\n  @MessageBody() data: string,\n  @ConnectedSocket() client: Socket,\n): string {\n  return data;\n}\n"),e.qZA()(),e.TgZ(175,"pre")(176,"code",15),e._uU(177,"\n@Bind(MessageBody(), ConnectedSocket())\n@SubscribeMessage('events')\nhandleEvent(data, client) {\n  return data;\n}\n"),e.qZA()(),e.TgZ(178,"blockquote",10)(179,"strong"),e._uU(180,"Hint"),e.qZA(),e.TgZ(181,"code"),e._uU(182,"@ConnectedSocket()"),e.qZA(),e._uU(183," decorator is imported from "),e.TgZ(184,"code"),e._uU(185,"@nestjs/websockets"),e.qZA(),e._uU(186," package.\n"),e.qZA(),e.TgZ(187,"p"),e._uU(188,"However, in this case, you won't be able to leverage interceptors. If you don't want to respond to the user, you can simply skip the "),e.TgZ(189,"code"),e._uU(190,"return"),e.qZA(),e._uU(191,' statement (or explicitly return a "falsy" value, e.g. '),e.TgZ(192,"code"),e._uU(193,"undefined"),e.qZA(),e._uU(194,")."),e.qZA(),e.TgZ(195,"p"),e._uU(196,"Now when a client emits the message as follows:"),e.qZA(),e.TgZ(197,"pre")(198,"code",15),e._uU(199,"\nsocket.emit('events', { name: 'Nest' });\n"),e.qZA()(),e.TgZ(200,"p"),e._uU(201,"The "),e.TgZ(202,"code"),e._uU(203,"handleEvent()"),e.qZA(),e._uU(204," method will be executed. In order to listen for messages emitted from within the above handler, the client has to attach a corresponding acknowledgment listener:"),e.qZA(),e.TgZ(205,"pre")(206,"code",15),e._uU(207,"\nsocket.emit('events', { name: 'Nest' }, (data) => console.log(data));\n"),e.qZA()(),e.TgZ(208,"h4",26)(209,"span"),e._uU(210,"Multiple responses"),e.qZA()(),e.TgZ(211,"p"),e._uU(212,"The acknowledgment is dispatched only once. Furthermore, it is not supported by native WebSockets implementation. To solve this limitation, you may return an object which consists of two properties. The "),e.TgZ(213,"code"),e._uU(214,"event"),e.qZA(),e._uU(215," which is a name of the emitted event and the "),e.TgZ(216,"code"),e._uU(217,"data"),e.qZA(),e._uU(218," that has to be forwarded to the client."),e.qZA(),e.TgZ(219,"span",13),e._uU(220),e.ALo(221,"extension"),e._UZ(222,"app-tabs",null,27),e.qZA(),e.TgZ(224,"pre")(225,"code",15),e._uU(226,"\n@SubscribeMessage('events')\nhandleEvent(@MessageBody() data: unknown): WsResponse<unknown> {\n  const event = 'events';\n  return { event, data };\n}\n"),e.qZA()(),e.TgZ(227,"pre")(228,"code",15),e._uU(229,"\n@Bind(MessageBody())\n@SubscribeMessage('events')\nhandleEvent(data) {\n  const event = 'events';\n  return { event, data };\n}\n"),e.qZA()(),e.TgZ(230,"blockquote",10)(231,"strong"),e._uU(232,"Hint"),e.qZA(),e._uU(233," The "),e.TgZ(234,"code"),e._uU(235,"WsResponse"),e.qZA(),e._uU(236," interface is imported from "),e.TgZ(237,"code"),e._uU(238,"@nestjs/websockets"),e.qZA(),e._uU(239," package.\n"),e.qZA(),e.TgZ(240,"blockquote",18)(241,"strong"),e._uU(242,"Warning"),e.qZA(),e._uU(243," You should return a class instance that implements "),e.TgZ(244,"code"),e._uU(245,"WsResponse"),e.qZA(),e._uU(246," if your "),e.TgZ(247,"code"),e._uU(248,"data"),e.qZA(),e._uU(249," field relies on "),e.TgZ(250,"code"),e._uU(251,"ClassSerializerInterceptor"),e.qZA(),e._uU(252,", as it ignores plain JavaScript object responses.\n"),e.qZA(),e.TgZ(253,"p"),e._uU(254,"In order to listen for the incoming response(s), the client has to apply another event listener."),e.qZA(),e.TgZ(255,"pre")(256,"code",15),e._uU(257,"\nsocket.on('events', (data) => console.log(data));\n"),e.qZA()(),e.TgZ(258,"h4",28)(259,"span"),e._uU(260,"Asynchronous responses"),e.qZA()(),e.TgZ(261,"p"),e._uU(262,"Message handlers are able to respond either synchronously or "),e.TgZ(263,"strong"),e._uU(264,"asynchronously"),e.qZA(),e._uU(265,". Hence, "),e.TgZ(266,"code"),e._uU(267,"async"),e.qZA(),e._uU(268," methods are supported. A message handler is also able to return an\xa0"),e.TgZ(269,"code"),e._uU(270,"Observable"),e.qZA(),e._uU(271,", in which case the result values will be emitted until the stream is completed."),e.qZA(),e.TgZ(272,"span",13),e._uU(273),e.ALo(274,"extension"),e._UZ(275,"app-tabs",null,29),e.qZA(),e.TgZ(277,"pre")(278,"code",15),e._uU(279,"\n@SubscribeMessage('events')\nonEvent(@MessageBody() data: unknown): Observable<WsResponse<number>> {\n  const event = 'events';\n  const response = [1, 2, 3];\n\n  return from(response).pipe(\n    map(data => ({ event, data })),\n  );\n}\n"),e.qZA()(),e.TgZ(280,"pre")(281,"code",15),e._uU(282,"\n@Bind(MessageBody())\n@SubscribeMessage('events')\nonEvent(data) {\n  const event = 'events';\n  const response = [1, 2, 3];\n\n  return from(response).pipe(\n    map(data => ({ event, data })),\n  );\n}\n"),e.qZA()(),e.TgZ(283,"p"),e._uU(284,"In the example above, the message handler will respond "),e.TgZ(285,"strong"),e._uU(286,"3 times"),e.qZA(),e._uU(287," (with each item from the array)."),e.qZA(),e.TgZ(288,"h4",30)(289,"span"),e._uU(290,"Lifecycle hooks"),e.qZA()(),e.TgZ(291,"p"),e._uU(292,"There are 3 useful lifecycle hooks available. All of them have corresponding interfaces and are described in the following table:"),e.qZA(),e.TgZ(293,"table")(294,"tr")(295,"td")(296,"code"),e._uU(297,"OnGatewayInit"),e.qZA()(),e.TgZ(298,"td"),e._uU(299," Forces to implement the "),e.TgZ(300,"code"),e._uU(301,"afterInit()"),e.qZA(),e._uU(302," method. Takes library-specific server instance as an argument (and spreads the rest if required). "),e.qZA()(),e.TgZ(303,"tr")(304,"td")(305,"code"),e._uU(306,"OnGatewayConnection"),e.qZA()(),e.TgZ(307,"td"),e._uU(308," Forces to implement the "),e.TgZ(309,"code"),e._uU(310,"handleConnection()"),e.qZA(),e._uU(311," method. Takes library-specific client socket instance as an argument. "),e.qZA()(),e.TgZ(312,"tr")(313,"td")(314,"code"),e._uU(315,"OnGatewayDisconnect"),e.qZA()(),e.TgZ(316,"td"),e._uU(317," Forces to implement the "),e.TgZ(318,"code"),e._uU(319,"handleDisconnect()"),e.qZA(),e._uU(320," method. Takes library-specific client socket instance as an argument. "),e.qZA()()(),e.TgZ(321,"blockquote",10)(322,"strong"),e._uU(323,"Hint"),e.qZA(),e._uU(324," Each lifecycle interface is exposed from "),e.TgZ(325,"code"),e._uU(326,"@nestjs/websockets"),e.qZA(),e._uU(327," package.\n"),e.qZA(),e.TgZ(328,"h4",31)(329,"span"),e._uU(330,"Server"),e.qZA()(),e.TgZ(331,"p"),e._uU(332,"Occasionally, you may want to have a direct access to the native, "),e.TgZ(333,"strong"),e._uU(334,"platform-specific"),e.qZA(),e._uU(335," server instance. The reference to this object is passed as an argument to the "),e.TgZ(336,"code"),e._uU(337,"afterInit()"),e.qZA(),e._uU(338," method ("),e.TgZ(339,"code"),e._uU(340,"OnGatewayInit"),e.qZA(),e._uU(341," interface). Another option is to use the "),e.TgZ(342,"code"),e._uU(343,"@WebSocketServer()"),e.qZA(),e._uU(344," decorator."),e.qZA(),e.TgZ(345,"pre")(346,"code",15),e._uU(347,"\n@WebSocketServer()\nserver: Server;\n"),e.qZA()(),e.TgZ(348,"blockquote",18)(349,"strong"),e._uU(350,"Notice"),e.qZA(),e._uU(351," The "),e.TgZ(352,"code"),e._uU(353,"@WebSocketServer()"),e.qZA(),e._uU(354," decorator is imported from the "),e.TgZ(355,"code"),e._uU(356,"@nestjs/websockets"),e.qZA(),e._uU(357," package.\n"),e.qZA(),e.TgZ(358,"p"),e._uU(359,"Nest will automatically assign the server instance to this property once it is ready to use."),e.qZA(),e.TgZ(360,"p"),e._UZ(361,"app-banner-enterprise"),e.qZA(),e.TgZ(362,"h4",32)(363,"span"),e._uU(364,"Example"),e.qZA()(),e.TgZ(365,"p"),e._uU(366,"A working example is available "),e.TgZ(367,"a",33),e._uU(368,"here"),e.qZA(),e._uU(369,"."),e.qZA()()),2&n){const a=e.MAs(39),m=e.MAs(90),W=e.MAs(115),_=e.MAs(125),b=e.MAs(138),T=e.MAs(171),f=e.MAs(223),q=e.MAs(276);e.xp6(40),e.ekj("hide",a.isJsActive),e.xp6(3),e.ekj("hide",!a.isJsActive),e.xp6(44),e.hij(" ",e.xi3(88,35,"events.gateway",m.isJsActive),"\n"),e.xp6(4),e.ekj("hide",m.isJsActive),e.xp6(3),e.ekj("hide",!m.isJsActive),e.xp6(18),e.hij(" ",e.xi3(113,38,"events.module",W.isJsActive),"\n"),e.xp6(10),e.hij(" ",e.xi3(123,41,"events.gateway",_.isJsActive),"\n"),e.xp6(4),e.ekj("hide",_.isJsActive),e.xp6(3),e.ekj("hide",!_.isJsActive),e.xp6(6),e.hij(" ",e.xi3(136,44,"events.gateway",b.isJsActive),"\n"),e.xp6(4),e.ekj("hide",b.isJsActive),e.xp6(3),e.ekj("hide",!b.isJsActive),e.xp6(26),e.hij(" ",e.xi3(169,47,"events.gateway",T.isJsActive),"\n"),e.xp6(4),e.ekj("hide",T.isJsActive),e.xp6(3),e.ekj("hide",!T.isJsActive),e.xp6(45),e.hij(" ",e.xi3(221,50,"events.gateway",f.isJsActive),"\n"),e.xp6(4),e.ekj("hide",f.isJsActive),e.xp6(3),e.ekj("hide",!f.isJsActive),e.xp6(46),e.hij(" ",e.xi3(274,53,"events.gateway",q.isJsActive),"\n"),e.xp6(4),e.ekj("hide",q.isJsActive),e.xp6(3),e.ekj("hide",!q.isJsActive)}},dependencies:[p.n,U.U,x.V,r.rH,y.F],encapsulation:2,changeDetection:0}));class g extends c.y{}(0,o.Z)(g,"\u0275fac",function(){let t;return function(s){return(t||(t=e.n5z(g)))(s||g)}}()),(0,o.Z)(g,"\u0275cmp",e.Xpm({type:g,selectors:[["app-guards"]],features:[e.qOj],decls:45,vars:4,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/websockets/guards.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","guards"],["routerLink","/guards"],[1,"info"],["appAnchor","","id","binding-guards"],[1,"filename"],["appf5dc4d782ceb4733a85f1ebd8880cbda0a42663a",""],[1,"language-typescript"]],template:function(n,s){if(1&n&&(e.TgZ(0,"div",0,1)(2,"div",2)(3,"a",3),e._UZ(4,"i",4),e.qZA()(),e.TgZ(5,"h3",5),e._uU(6,"Guards"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"There is no fundamental difference between web sockets guards and "),e.TgZ(9,"a",6),e._uU(10,"regular HTTP application guards"),e.qZA(),e._uU(11,". The only difference is that instead of throwing "),e.TgZ(12,"code"),e._uU(13,"HttpException"),e.qZA(),e._uU(14,", you should use "),e.TgZ(15,"code"),e._uU(16,"WsException"),e.qZA(),e._uU(17,"."),e.qZA(),e.TgZ(18,"blockquote",7)(19,"strong"),e._uU(20,"Hint"),e.qZA(),e._uU(21," The "),e.TgZ(22,"code"),e._uU(23,"WsException"),e.qZA(),e._uU(24," class is exposed from "),e.TgZ(25,"code"),e._uU(26,"@nestjs/websockets"),e.qZA(),e._uU(27," package.\n"),e.qZA(),e.TgZ(28,"h4",8)(29,"span"),e._uU(30,"Binding guards"),e.qZA()(),e.TgZ(31,"p"),e._uU(32,"The following example uses a method-scoped guard. Just as with HTTP based applications, you can also use gateway-scoped guards (i.e., prefix the gateway class with a "),e.TgZ(33,"code"),e._uU(34,"@UseGuards()"),e.qZA(),e._uU(35," decorator)."),e.qZA(),e.TgZ(36,"span",9),e._UZ(37,"app-tabs",null,10),e.qZA(),e.TgZ(39,"pre")(40,"code",11),e._uU(41,"\n@UseGuards(AuthGuard)\n@SubscribeMessage('events')\nhandleEvent(client: Client, data: unknown): WsResponse<unknown> {\n  const event = 'events';\n  return { event, data };\n}\n"),e.qZA()(),e.TgZ(42,"pre")(43,"code",11),e._uU(44,"\n@UseGuards(AuthGuard)\n@SubscribeMessage('events')\nhandleEvent(client, data) {\n  const event = 'events';\n  return { event, data };\n}\n"),e.qZA()()()),2&n){const a=e.MAs(38);e.xp6(39),e.ekj("hide",a.isJsActive),e.xp6(3),e.ekj("hide",!a.isJsActive)}},dependencies:[p.n,U.U,r.rH],encapsulation:2,changeDetection:0}));class Z extends c.y{}(0,o.Z)(Z,"\u0275fac",function(){let t;return function(s){return(t||(t=e.n5z(Z)))(s||Z)}}()),(0,o.Z)(Z,"\u0275cmp",e.Xpm({type:Z,selectors:[["app-interceptors"]],features:[e.qOj],decls:24,vars:4,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/websockets/interceptors.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","interceptors"],["routerLink","/interceptors"],[1,"filename"],["app9dcd66316bb0c879fc73c0a3389c8249b16bb32b",""],[1,"language-typescript"]],template:function(n,s){if(1&n&&(e.TgZ(0,"div",0,1)(2,"div",2)(3,"a",3),e._UZ(4,"i",4),e.qZA()(),e.TgZ(5,"h3",5),e._uU(6,"Interceptors"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"There is no difference between "),e.TgZ(9,"a",6),e._uU(10,"regular interceptors"),e.qZA(),e._uU(11," and web sockets interceptors. The following example uses a manually instantiated method-scoped interceptor. Just as with HTTP based applications, you can also use gateway-scoped interceptors (i.e., prefix the gateway class with a "),e.TgZ(12,"code"),e._uU(13,"@UseInterceptors()"),e.qZA(),e._uU(14," decorator)."),e.qZA(),e.TgZ(15,"span",7),e._UZ(16,"app-tabs",null,8),e.qZA(),e.TgZ(18,"pre")(19,"code",9),e._uU(20,"\n@UseInterceptors(new TransformInterceptor())\n@SubscribeMessage('events')\nhandleEvent(client: Client, data: unknown): WsResponse<unknown> {\n  const event = 'events';\n  return { event, data };\n}\n"),e.qZA()(),e.TgZ(21,"pre")(22,"code",9),e._uU(23,"\n@UseInterceptors(new TransformInterceptor())\n@SubscribeMessage('events')\nhandleEvent(client, data) {\n  const event = 'events';\n  return { event, data };\n}\n"),e.qZA()()()),2&n){const a=e.MAs(17);e.xp6(18),e.ekj("hide",a.isJsActive),e.xp6(3),e.ekj("hide",!a.isJsActive)}},dependencies:[p.n,r.rH],encapsulation:2,changeDetection:0}));class h extends c.y{}(0,o.Z)(h,"\u0275fac",function(){let t;return function(s){return(t||(t=e.n5z(h)))(s||h)}}()),(0,o.Z)(h,"\u0275cmp",e.Xpm({type:h,selectors:[["app-pipes"]],features:[e.qOj],decls:51,vars:4,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/websockets/pipes.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","pipes"],["routerLink","/pipes"],[1,"info"],["appAnchor","","id","binding-pipes"],[1,"filename"],["app148683c022587a99618500978430d39cc1ba2673",""],[1,"language-typescript"]],template:function(n,s){if(1&n&&(e.TgZ(0,"div",0,1)(2,"div",2)(3,"a",3),e._UZ(4,"i",4),e.qZA()(),e.TgZ(5,"h3",5),e._uU(6,"Pipes"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"There is no fundamental difference between "),e.TgZ(9,"a",6),e._uU(10,"regular pipes"),e.qZA(),e._uU(11," and web sockets pipes. The only difference is that instead of throwing "),e.TgZ(12,"code"),e._uU(13,"HttpException"),e.qZA(),e._uU(14,", you should use "),e.TgZ(15,"code"),e._uU(16,"WsException"),e.qZA(),e._uU(17,". In addition, all pipes will be only applied to the "),e.TgZ(18,"code"),e._uU(19,"data"),e.qZA(),e._uU(20," parameter (because validating or transforming "),e.TgZ(21,"code"),e._uU(22,"client"),e.qZA(),e._uU(23," instance is useless)."),e.qZA(),e.TgZ(24,"blockquote",7)(25,"strong"),e._uU(26,"Hint"),e.qZA(),e._uU(27," The "),e.TgZ(28,"code"),e._uU(29,"WsException"),e.qZA(),e._uU(30," class is exposed from "),e.TgZ(31,"code"),e._uU(32,"@nestjs/websockets"),e.qZA(),e._uU(33," package.\n"),e.qZA(),e.TgZ(34,"h4",8)(35,"span"),e._uU(36,"Binding pipes"),e.qZA()(),e.TgZ(37,"p"),e._uU(38,"The following example uses a manually instantiated method-scoped pipe. Just as with HTTP based applications, you can also use gateway-scoped pipes (i.e., prefix the gateway class with a "),e.TgZ(39,"code"),e._uU(40,"@UsePipes()"),e.qZA(),e._uU(41," decorator)."),e.qZA(),e.TgZ(42,"span",9),e._UZ(43,"app-tabs",null,10),e.qZA(),e.TgZ(45,"pre")(46,"code",11),e._uU(47,"\n@UsePipes(new ValidationPipe())\n@SubscribeMessage('events')\nhandleEvent(client: Client, data: unknown): WsResponse<unknown> {\n  const event = 'events';\n  return { event, data };\n}\n"),e.qZA()(),e.TgZ(48,"pre")(49,"code",11),e._uU(50,"\n@UsePipes(new ValidationPipe())\n@SubscribeMessage('events')\nhandleEvent(client, data) {\n  const event = 'events';\n  return { event, data };\n}\n"),e.qZA()()()),2&n){const a=e.MAs(44);e.xp6(45),e.ekj("hide",a.isJsActive),e.xp6(3),e.ekj("hide",!a.isJsActive)}},dependencies:[p.n,U.U,r.rH],encapsulation:2,changeDetection:0}));const j=[{path:"gateways",component:l,data:{title:"Gateways"}},{path:"pipes",component:h,data:{title:"Pipes - Gateways"}},{path:"exception-filters",component:u,data:{title:"Exception Filters - Gateways"}},{path:"guards",component:g,data:{title:"Guards - Gateways"}},{path:"interceptors",component:Z,data:{title:"Interceptors - Gateways"}},{path:"adapter",component:d,data:{title:"Adapter - Gateways"}}];class A{}(0,o.Z)(A,"\u0275fac",function(n){return new(n||A)}),(0,o.Z)(A,"\u0275mod",e.oAB({type:A})),(0,o.Z)(A,"\u0275inj",e.cJS({imports:[w.ez,k.m,r.Bz.forChild(j)]}))}}]);