!function(){function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&n(e,t)}function n(e,t){return(n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function r(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var n,r=a(e);if(t){var c=a(this).constructor;n=Reflect.construct(r,arguments,c)}else n=r.apply(this,arguments);return o(this,n)}}function o(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{L049:function(n,o,a){"use strict";a.r(o),a.d(o,"FaqModule",function(){return j});var c,i,s,l,p,b,d,u=a("ofXK"),h=a("tyNb"),f=a("PCNd"),m=a("Ydvz"),I=a("fXoL"),J=a("zg9e"),g=((c=function(n){t(a,n);var o=r(a);function a(){return e(this,a),o.apply(this,arguments)}return a}(m.a)).\u0275fac=function(e){return y(e||c)},c.\u0275cmp=I.Ab({type:c,selectors:[["app-errors"]],features:[I.ub],decls:75,vars:0,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/faq/errors.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","common-errors"],["appAnchor","","id","cannot-resolve-dependency-error"],[1,"language-bash"],["href","/fundamentals/custom-providers#di-fundamentals"],["appAnchor","","id","circular-dependency-error"],["routerLink","/fundamentals/circular-dependency"]],template:function(e,t){1&e&&(I.Jb(0,"div",0,1),I.Jb(2,"div",2),I.Jb(3,"a",3),I.Hb(4,"i",4),I.Ib(),I.Ib(),I.Jb(5,"h3",5),I.lc(6,"Common errors"),I.Ib(),I.Jb(7,"p"),I.lc(8,"During your development with NestJS, you may encounter various errors as you learn the framework."),I.Ib(),I.Jb(9,"h4",6),I.Jb(10,"span"),I.lc(11,'"Cannot resolve dependency" error'),I.Ib(),I.Ib(),I.Jb(12,"p"),I.lc(13,"Probably the most common error message is about Nest not being able to resolve dependencies of a provider. The error message usually looks something like this:"),I.Ib(),I.Jb(14,"pre"),I.Jb(15,"code",7),I.lc(16,"\nNest can't resolve dependencies of the <provider> (?). Please make sure that the argument <unknown_token> at index [<index>] is available in the <module> context.\n\nPotential solutions:\n- If <unknown_token> is a provider, is it part of the current <module>?\n- If <unknown_token> is exported from a separate @Module, is that module imported within <module>?\n  @Module({\n    imports: [ /* the Module containing <unknown_token> */ ]\n  })\n"),I.Ib(),I.Ib(),I.Jb(17,"p"),I.lc(18,"The most common culprit of the error, is not having the "),I.Jb(19,"code"),I.lc(20,"provider"),I.Ib(),I.lc(21," in the module's "),I.Jb(22,"code"),I.lc(23,"providers"),I.Ib(),I.lc(24," array. Please make sure that the provider is indeed in the "),I.Jb(25,"code"),I.lc(26,"providers"),I.Ib(),I.lc(27," array and following "),I.Jb(28,"a",8),I.lc(29,"standard NestJS provider practices"),I.Ib(),I.lc(30,"."),I.Ib(),I.Jb(31,"p"),I.lc(32,"There are a few gotchas, that are common. One is putting a provider in an "),I.Jb(33,"code"),I.lc(34,"imports"),I.Ib(),I.lc(35," array. If this is the case, the error will have the provider's name where "),I.Jb(36,"code"),I.lc(37,"<module>"),I.Ib(),I.lc(38," should be."),I.Ib(),I.Jb(39,"p"),I.lc(40,"If you run across this error while developing, take a look at the module mentioned in the error message and look at its "),I.Jb(41,"code"),I.lc(42,"providers"),I.Ib(),I.lc(43,". For each provider in the "),I.Jb(44,"code"),I.lc(45,"providers"),I.Ib(),I.lc(46," array, make sure the module has access to all of the dependencies. Often times, "),I.Jb(47,"code"),I.lc(48,"providers"),I.Ib(),I.lc(49,' are duplicated in a "Feature Module" and a "Root Module" which means Nest will try to instantiate the provider twice. More than likely, the module containing the '),I.Jb(50,"code"),I.lc(51,"provider"),I.Ib(),I.lc(52,' being duplicated should be added in the "Root Module"\'s '),I.Jb(53,"code"),I.lc(54,"imports"),I.Ib(),I.lc(55," array instead."),I.Ib(),I.Jb(56,"h4",9),I.Jb(57,"span"),I.lc(58,'"Circular dependency" error'),I.Ib(),I.Ib(),I.Jb(59,"p"),I.lc(60,"Occasionally you'll find it difficult to avoid "),I.Jb(61,"a",10),I.lc(62,"circular dependencies"),I.Ib(),I.lc(63," in your application. You'll need to take some steps to help Nest resolve these. Errors that arise from circular dependencies look like this:"),I.Ib(),I.Jb(64,"pre"),I.Jb(65,"code",7),I.lc(66,'\nNest cannot create the <module> instance.\nThe module at index [<index>] of the <module> "imports" array is undefined.\n\nPotential causes:\n- A circular dependency between modules. Use forwardRef() to avoid it. Read more: https://docs.nestjs.com/fundamentals/circular-dependency\n- The module at index [<index>] is of type "undefined". Check your import statements and the type of the module.\n\nScope [<module_import_chain>]\n# example chain AppModule -> FooModule\n'),I.Ib(),I.Ib(),I.Jb(67,"p"),I.lc(68,"Circular dependencies can arise from both providers depending on each other, or typescript files depending on each other for constants, such as exporting constants from a module file and importing them in a service file. In the latter case, it is advised to create a separate file for your constants. In the former case, please follow the guide on circular dependencies and make sure that both the modules "),I.Jb(69,"strong"),I.lc(70,"and"),I.Ib(),I.lc(71," the providers are marked with "),I.Jb(72,"code"),I.lc(73,"forwardRef"),I.Ib(),I.lc(74,"."),I.Ib(),I.Ib())},directives:[J.a,h.f],encapsulation:2,changeDetection:0}),c),y=I.Lb(g),v=((i=function(n){t(a,n);var o=r(a);function a(){return e(this,a),o.apply(this,arguments)}return a}(m.a)).\u0275fac=function(e){return w(e||i)},i.\u0275cmp=I.Ab({type:i,selectors:[["app-global-prefix"]],features:[I.ub],decls:21,vars:0,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/faq/global-prefix.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","global-prefix"],[1,"language-typescript"]],template:function(e,t){1&e&&(I.Jb(0,"div",0,1),I.Jb(2,"div",2),I.Jb(3,"a",3),I.Hb(4,"i",4),I.Ib(),I.Ib(),I.Jb(5,"h3",5),I.lc(6,"Global prefix"),I.Ib(),I.Jb(7,"p"),I.lc(8,"To set a prefix for "),I.Jb(9,"strong"),I.lc(10,"every route"),I.Ib(),I.lc(11," registered in an HTTP application, use the "),I.Jb(12,"code"),I.lc(13,"setGlobalPrefix()"),I.Ib(),I.lc(14," method of the "),I.Jb(15,"code"),I.lc(16,"INestApplication"),I.Ib(),I.lc(17," instance."),I.Ib(),I.Jb(18,"pre"),I.Jb(19,"code",6),I.lc(20,"\nconst app = await NestFactory.create(AppModule);\napp.setGlobalPrefix('v1');\n"),I.Ib(),I.Ib(),I.Ib())},encapsulation:2,changeDetection:0}),i),w=I.Lb(v),T=a("FKbk"),x=((s=function(n){t(a,n);var o=r(a);function a(){return e(this,a),o.apply(this,arguments)}return a}(m.a)).\u0275fac=function(e){return A(e||s)},s.\u0275cmp=I.Ab({type:s,selectors:[["app-http-adapter"]],features:[I.ub],decls:100,vars:4,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/faq/http-adapter.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","http-adapter"],["appAnchor","","id","outside-application-context-strategy"],[1,"filename"],["app4608c359aece4dca123dc810071d304cb5300638",""],[1,"language-typescript"],["appAnchor","","id","in-context-strategy"],["app81eec58ab156c4e42200b94be82870b7e83b11cb",""],[1,"info"]],template:function(e,t){if(1&e&&(I.Jb(0,"div",0,1),I.Jb(2,"div",2),I.Jb(3,"a",3),I.Hb(4,"i",4),I.Ib(),I.Ib(),I.Jb(5,"h3",5),I.lc(6,"HTTP adapter"),I.Ib(),I.Jb(7,"p"),I.lc(8,"Occasionally, you may want to access the underlying HTTP server, either within the Nest application context or from the outside."),I.Ib(),I.Jb(9,"p"),I.lc(10,"Every native (platform-specific) HTTP server/library (e.g., Express and Fastify) instance is wrapped in an "),I.Jb(11,"strong"),I.lc(12,"adapter"),I.Ib(),I.lc(13,". The adapter is registered as a globally available provider that can be retrieved from the application context, as well as injected into other providers."),I.Ib(),I.Jb(14,"h4",6),I.Jb(15,"span"),I.lc(16,"Outside application context strategy"),I.Ib(),I.Ib(),I.Jb(17,"p"),I.lc(18,"To get a reference to the "),I.Jb(19,"code"),I.lc(20,"HttpAdapter"),I.Ib(),I.lc(21," from outside of the application context, call the "),I.Jb(22,"code"),I.lc(23,"getHttpAdapter()"),I.Ib(),I.lc(24," method."),I.Ib(),I.Jb(25,"span",7),I.Hb(26,"app-tabs",null,8),I.Ib(),I.Jb(28,"pre"),I.Jb(29,"code",9),I.lc(30,"\nconst app = await NestFactory.create(AppModule);\nconst httpAdapter = app.getHttpAdapter();\n"),I.Ib(),I.Ib(),I.Jb(31,"h4",10),I.Jb(32,"span"),I.lc(33,"In-context strategy"),I.Ib(),I.Ib(),I.Jb(34,"p"),I.lc(35,"To get a reference to the "),I.Jb(36,"code"),I.lc(37,"HttpAdapterHost"),I.Ib(),I.lc(38," from within the application context, inject it using the same technique as any other existing provider (e.g., using constructor injection)."),I.Ib(),I.Jb(39,"span",7),I.Hb(40,"app-tabs",null,11),I.Ib(),I.Jb(42,"pre"),I.Jb(43,"code",9),I.lc(44,"\nexport class CatsService {\n  constructor(private adapterHost: HttpAdapterHost) {}\n}\n"),I.Ib(),I.Ib(),I.Jb(45,"pre"),I.Jb(46,"code",9),I.lc(47,"\n@Dependencies(HttpAdapterHost)\nexport class CatsService {\n  constructor(adapterHost) {\n    this.adapterHost = adapterHost;\n  }\n}\n"),I.Ib(),I.Ib(),I.Jb(48,"blockquote",12),I.Jb(49,"strong"),I.lc(50,"Hint"),I.Ib(),I.lc(51," The "),I.Jb(52,"code"),I.lc(53,"HttpAdapterHost"),I.Ib(),I.lc(54," is imported from the "),I.Jb(55,"code"),I.lc(56,"@nestjs/core"),I.Ib(),I.lc(57," package.\n"),I.Ib(),I.Jb(58,"p"),I.lc(59,"The "),I.Jb(60,"code"),I.lc(61,"HttpAdapterHost"),I.Ib(),I.lc(62," is "),I.Jb(63,"strong"),I.lc(64,"not"),I.Ib(),I.lc(65," an actual "),I.Jb(66,"code"),I.lc(67,"HttpAdapter"),I.Ib(),I.lc(68,". To get the actual "),I.Jb(69,"code"),I.lc(70,"HttpAdapter"),I.Ib(),I.lc(71," instance, simply access the "),I.Jb(72,"code"),I.lc(73,"httpAdapter"),I.Ib(),I.lc(74," property."),I.Ib(),I.Jb(75,"pre"),I.Jb(76,"code",9),I.lc(77,"\nconst adapterHost = app.get(HttpAdapterHost);\nconst httpAdapter = adapterHost.httpAdapter;\n"),I.Ib(),I.Ib(),I.Jb(78,"p"),I.lc(79,"The "),I.Jb(80,"code"),I.lc(81,"httpAdapter"),I.Ib(),I.lc(82," is the actual instance of the HTTP adapter used by the underlying framework. It is an instance of either "),I.Jb(83,"code"),I.lc(84,"ExpressAdapter"),I.Ib(),I.lc(85," or "),I.Jb(86,"code"),I.lc(87,"FastifyAdapter"),I.Ib(),I.lc(88," (both classes extend "),I.Jb(89,"code"),I.lc(90,"AbstractHttpAdapter"),I.Ib(),I.lc(91,")."),I.Ib(),I.Jb(92,"p"),I.lc(93,"The adapter object exposes several useful methods to interact with the HTTP server. However, if you want to access the library instance (e.g., the Express instance) directly, call the "),I.Jb(94,"code"),I.lc(95,"getInstance()"),I.Ib(),I.lc(96," method."),I.Ib(),I.Jb(97,"pre"),I.Jb(98,"code",9),I.lc(99,"\nconst instance = httpAdapter.getInstance();\n"),I.Ib(),I.Ib(),I.Ib()),2&e){var n=I.ec(41);I.wb(42),I.yb("hide",n.isJsActive),I.wb(3),I.yb("hide",!n.isJsActive)}},directives:[J.a,T.a],encapsulation:2,changeDetection:0}),s),A=I.Lb(x),k=((l=function(n){t(a,n);var o=r(a);function a(){return e(this,a),o.apply(this,arguments)}return a}(m.a)).\u0275fac=function(e){return S(e||l)},l.\u0275cmp=I.Ab({type:l,selectors:[["app-hybrid-application"]],features:[I.ub],decls:78,vars:4,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/faq/hybrid-application.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","hybrid-application"],[1,"language-typescript"],[1,"filename"],["app461bd1ef007c6068d9e1a98910796efc69b84766",""],[1,"info"],["appAnchor","","id","sharing-configuration"]],template:function(e,t){if(1&e&&(I.Jb(0,"div",0,1),I.Jb(2,"div",2),I.Jb(3,"a",3),I.Hb(4,"i",4),I.Ib(),I.Ib(),I.Jb(5,"h3",5),I.lc(6,"Hybrid application"),I.Ib(),I.Jb(7,"p"),I.lc(8,"A hybrid application is one that both listens for HTTP requests, as well as makes use of connected microservices. The "),I.Jb(9,"code"),I.lc(10,"INestApplication"),I.Ib(),I.lc(11," instance can be connected with "),I.Jb(12,"code"),I.lc(13,"INestMicroservice"),I.Ib(),I.lc(14," instances through the "),I.Jb(15,"code"),I.lc(16,"connectMicroservice()"),I.Ib(),I.lc(17," method."),I.Ib(),I.Jb(18,"pre"),I.Jb(19,"code",6),I.lc(20,"\nconst app = await NestFactory.create(AppModule);\nconst microservice = app.connectMicroservice({\n  transport: Transport.TCP,\n});\n\nawait app.startAllMicroservicesAsync();\nawait app.listen(3001);\n"),I.Ib(),I.Ib(),I.Jb(21,"p"),I.lc(22,"To connect multiple microservice instances, issue the call to "),I.Jb(23,"code"),I.lc(24,"connectMicroservice()"),I.Ib(),I.lc(25," for each microservice:"),I.Ib(),I.Jb(26,"pre"),I.Jb(27,"code",6),I.lc(28,"\nconst app = await NestFactory.create(AppModule);\n// microservice #1\nconst microserviceTcp = app.connectMicroservice<MicroserviceOptions>({\n  transport: Transport.TCP,\n  options: {\n    port: 3001,\n  },\n});\n// microservice #2\nconst microserviceRedis = app.connectMicroservice<MicroserviceOptions>({\n  transport: Transport.REDIS,\n  options: {\n    url: 'redis://localhost:6379',\n  },\n});\n\nawait app.startAllMicroservicesAsync();\nawait app.listen(3001);\n"),I.Ib(),I.Ib(),I.Jb(29,"p"),I.lc(30,"To bind "),I.Jb(31,"code"),I.lc(32,"@MessagePattern()"),I.Ib(),I.lc(33," to only one transport strategy (for example, MQTT) in a hybrid application with multiple microservices, we can pass the second argument of type "),I.Jb(34,"code"),I.lc(35,"Transport"),I.Ib(),I.lc(36," which is an enum with all the built-in transport strategies defined."),I.Ib(),I.Jb(37,"span",7),I.Hb(38,"app-tabs",null,8),I.Ib(),I.Jb(40,"pre"),I.Jb(41,"code",6),I.lc(42,"\n@MessagePattern('time.us.*', Transport.NATS)\ngetDate(@Payload() data: number[], @Ctx() context: NatsContext) {\n  console.log(`Subject: ${context.getSubject()}`); // e.g. \"time.us.east\"\n  return new Date().toLocaleTimeString(...);\n}\n@MessagePattern({ cmd: 'time.us' }, Transport.TCP)\ngetTCPDate(@Payload() data: number[]) {\n  return new Date().toLocaleTimeString(...);\n}\n"),I.Ib(),I.Ib(),I.Jb(43,"pre"),I.Jb(44,"code",6),I.lc(45,"\n@Bind(Payload(), Ctx())\n@MessagePattern('time.us.*', Transport.NATS)\ngetDate(data, context) {\n  console.log(`Subject: ${context.getSubject()}`); // e.g. \"time.us.east\"\n  return new Date().toLocaleTimeString(...);\n}\n@Bind(Payload(), Ctx())\n@MessagePattern({ cmd: 'time.us' }, Transport.TCP)\ngetTCPDate(data, context) {\n  return new Date().toLocaleTimeString(...);\n}\n"),I.Ib(),I.Ib(),I.Jb(46,"blockquote",9),I.Jb(47,"strong"),I.lc(48,"Hint"),I.Ib(),I.Jb(49,"code"),I.lc(50,"@Payload()"),I.Ib(),I.lc(51,", "),I.Jb(52,"code"),I.lc(53,"@Ctx()"),I.Ib(),I.lc(54,", "),I.Jb(55,"code"),I.lc(56,"Transport"),I.Ib(),I.lc(57," and "),I.Jb(58,"code"),I.lc(59,"NatsContext"),I.Ib(),I.lc(60," are imported from "),I.Jb(61,"code"),I.lc(62,"@nestjs/microservices"),I.Ib(),I.lc(63,".\n"),I.Ib(),I.Jb(64,"h4",10),I.Jb(65,"span"),I.lc(66,"Sharing configuration"),I.Ib(),I.Ib(),I.Jb(67,"p"),I.lc(68,"By default a hybrid application will not inherit global pipes, interceptors, guards and filters configured for the main (HTTP-based) application.\nTo inherit these configuration properties from the main application, set the "),I.Jb(69,"code"),I.lc(70,"inheritAppConfig"),I.Ib(),I.lc(71," property in the second argument (an optional options object) of the "),I.Jb(72,"code"),I.lc(73,"connectMicroservice()"),I.Ib(),I.lc(74," call, as follow:"),I.Ib(),I.Jb(75,"pre"),I.Jb(76,"code",6),I.lc(77,"\nconst microservice = app.connectMicroservice({\n  transport: Transport.TCP\n}, { inheritAppConfig: true });\n"),I.Ib(),I.Ib(),I.Ib()),2&e){var n=I.ec(39);I.wb(40),I.yb("hide",n.isJsActive),I.wb(3),I.yb("hide",!n.isJsActive)}},directives:[T.a,J.a],encapsulation:2,changeDetection:0}),l),S=I.Lb(k),H=((p=function(n){t(a,n);var o=r(a);function a(){return e(this,a),o.apply(this,arguments)}return a}(m.a)).\u0275fac=function(e){return P(e||p)},p.\u0275cmp=I.Ab({type:p,selectors:[["app-multiple-servers"]],features:[I.ub],decls:60,vars:0,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/faq/multiple-servers.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","https"],[1,"language-typescript"],["appAnchor","","id","multiple-simultaneous-servers"],[1,"info"],[1,""],["routerLink","/graphql/subscriptions"]],template:function(e,t){1&e&&(I.Jb(0,"div",0,1),I.Jb(2,"div",2),I.Jb(3,"a",3),I.Hb(4,"i",4),I.Ib(),I.Ib(),I.Jb(5,"h3",5),I.lc(6,"HTTPS"),I.Ib(),I.Jb(7,"p"),I.lc(8,"To create an application that uses the HTTPS protocol, set the "),I.Jb(9,"code"),I.lc(10,"httpsOptions"),I.Ib(),I.lc(11," property in the options object passed to the "),I.Jb(12,"code"),I.lc(13,"create()"),I.Ib(),I.lc(14," method of the "),I.Jb(15,"code"),I.lc(16,"NestFactory"),I.Ib(),I.lc(17," class:"),I.Ib(),I.Jb(18,"pre"),I.Jb(19,"code",6),I.lc(20,"\nconst httpsOptions = {\n  key: fs.readFileSync('./secrets/private-key.pem'),\n  cert: fs.readFileSync('./secrets/public-certificate.pem'),\n};\nconst app = await NestFactory.create(AppModule, {\n  httpsOptions,\n});\nawait app.listen(3000);\n"),I.Ib(),I.Ib(),I.Jb(21,"p"),I.lc(22,"If you use the "),I.Jb(23,"code"),I.lc(24,"FastifyAdapter"),I.Ib(),I.lc(25,", create the application as follows:"),I.Ib(),I.Jb(26,"pre"),I.Jb(27,"code",6),I.lc(28,"\nconst app = await NestFactory.create<NestFastifyApplication>(\n  AppModule,\n  new FastifyAdapter({ https: httpsOptions }),\n);\n"),I.Ib(),I.Ib(),I.Jb(29,"h4",7),I.Jb(30,"span"),I.lc(31,"Multiple simultaneous servers"),I.Ib(),I.Ib(),I.Jb(32,"p"),I.lc(33,"The following recipe shows how to instantiate a Nest application that listens on multiple ports (for example, on a non-HTTPS port and an HTTPS port) simultaneously."),I.Ib(),I.Jb(34,"pre"),I.Jb(35,"code",6),I.lc(36,"\nconst httpsOptions = {\n  key: fs.readFileSync('./secrets/private-key.pem'),\n  cert: fs.readFileSync('./secrets/public-certificate.pem'),\n};\n\nconst server = express();\nconst app = await NestFactory.create(\n  AppModule,\n  new ExpressAdapter(server),\n);\nawait app.init();\n\nhttp.createServer(server).listen(3000);\nhttps.createServer(httpsOptions, server).listen(443);\n"),I.Ib(),I.Ib(),I.Jb(37,"blockquote",8),I.Jb(38,"strong"),I.lc(39,"Hint"),I.Ib(),I.lc(40," The "),I.Jb(41,"code"),I.lc(42,"ExpressAdapter"),I.Ib(),I.lc(43," is imported from the "),I.Jb(44,"code"),I.lc(45,"@nestjs/platform-express"),I.Ib(),I.lc(46," package. The "),I.Jb(47,"code"),I.lc(48,"http"),I.Ib(),I.lc(49," and "),I.Jb(50,"code"),I.lc(51,"https"),I.Ib(),I.lc(52," packages are native Node.js packages.\n"),I.Ib(),I.Jb(53,"blockquote",9),I.Jb(54,"strong"),I.lc(55,"Warning"),I.Ib(),I.lc(56," This recipe does not work with "),I.Jb(57,"a",10),I.lc(58,"GraphQL Subscriptions"),I.Ib(),I.lc(59,".\n"),I.Ib(),I.Ib())},directives:[J.a,h.f],encapsulation:2,changeDetection:0}),p),P=I.Lb(H),C=((b=function(n){t(a,n);var o=r(a);function a(){return e(this,a),o.apply(this,arguments)}return a}(m.a)).\u0275fac=function(e){return q(e||b)},b.\u0275cmp=I.Ab({type:b,selectors:[["app-request-lifecycle"]],features:[I.ub],decls:145,vars:0,consts:[[1,"content"],["contentReference",""],[1,"github-links"],["href","https://github.com/nestjs/docs.nestjs.com/edit/master/content/faq/request-lifecycle.md","aria-label","Suggest Edits","title","Suggest Edits"],[1,"fas","fa-edit"],["id","request-lifecycle"],["appAnchor","","id","middleware"],["routerLink","/middleware"],["appAnchor","","id","guards"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","interceptors"],["rel","nofollow","target","_blank","href","https://github.com/ReactiveX/rxjs"],["appAnchor","","id","pipes"],["appAnchor","","id","filters"],["appAnchor","","id","summary"]],template:function(e,t){1&e&&(I.Jb(0,"div",0,1),I.Jb(2,"div",2),I.Jb(3,"a",3),I.Hb(4,"i",4),I.Ib(),I.Ib(),I.Jb(5,"h3",5),I.lc(6,"Request lifecycle"),I.Ib(),I.Jb(7,"p"),I.lc(8,"Nest applications handle requests and produce responses in a sequence we refer to as the "),I.Jb(9,"strong"),I.lc(10,"request lifecycle"),I.Ib(),I.lc(11,". With the use of middleware, pipes, guards, and interceptors, it can be challenging to track down where a particular piece of code executes during the request lifecycle, especially as global, controller level, and route level components come into play. In general, a request flows through middleware to guards, then to interceptors, then to pipes and finally back to interceptors on the return path (as the response is generated)."),I.Ib(),I.Jb(12,"h4",6),I.Jb(13,"span"),I.lc(14,"Middleware"),I.Ib(),I.Ib(),I.Jb(15,"p"),I.lc(16,"Middleware is executed in a particular sequence. First, Nest runs globally bound middleware (such as middleware bound with "),I.Jb(17,"code"),I.lc(18,"app.use"),I.Ib(),I.lc(19,") and then it runs "),I.Jb(20,"a",7),I.lc(21,"module bound middleware"),I.Ib(),I.lc(22,", which are determined on paths. Middleware are run sequentially in the order they are bound, similar to the way middleware in Express works. In the case of middleware bound across different modules, the middleware bound to the root module will run first, and then middleware will run in the order that the modules are added to the imports array."),I.Ib(),I.Jb(23,"h4",8),I.Jb(24,"span"),I.lc(25,"Guards"),I.Ib(),I.Ib(),I.Jb(26,"p"),I.lc(27,"Guard execution starts with global guards, then proceeds to controller guards, and finally to route guards. As with middleware, guards run in the order in which they are bound. For example:"),I.Ib(),I.Jb(28,"pre"),I.Jb(29,"code",9),I.lc(30,"\n@UseGuards(Guard1, Guard2)\n@Controller('cats')\nexport class CatsController {\n  constructor(private catsService: CatsService) {}\n\n  @UseGuards(Guard3)\n  @Get()\n  getCats(): Cats[] {\n    return this.catsService.getCats();\n  }\n}\n"),I.Ib(),I.Ib(),I.Jb(31,"p"),I.Jb(32,"code"),I.lc(33,"Guard1"),I.Ib(),I.lc(34," will execute before "),I.Jb(35,"code"),I.lc(36,"Guard2"),I.Ib(),I.lc(37," and both will execute before "),I.Jb(38,"code"),I.lc(39,"Guard3"),I.Ib(),I.lc(40,"."),I.Ib(),I.Jb(41,"blockquote",10),I.Jb(42,"strong"),I.lc(43,"Hint"),I.Ib(),I.lc(44," When speaking about globally bound vs controller or locally bound, the difference is where the guard (or other component is bound). If you are using "),I.Jb(45,"code"),I.lc(46,"app.useGlobalGuard()"),I.Ib(),I.lc(47," or providing the component via a module, it is globally bound. Otherwise, it is bound to a controller if the decorator precedes a controller class, or to a route if the decorator proceeds a route declaration.\n"),I.Ib(),I.Jb(48,"h4",11),I.Jb(49,"span"),I.lc(50,"Interceptors"),I.Ib(),I.Ib(),I.Jb(51,"p"),I.lc(52,"Interceptors, for the most part, follow the same pattern as guards, with one catch: as interceptors return "),I.Jb(53,"a",12),I.lc(54,"RxJS Observables"),I.Ib(),I.lc(55,", the observables will be resolved in a first in last out manner. So inbound requests will go through the standard global, controller, route level resolution, but the response side of the request (i.e., after returning from the controller method handler) will be resolved from route to controller to global. Also, any errors thrown by pipes, controllers, or services can be read in the "),I.Jb(56,"code"),I.lc(57,"catchError"),I.Ib(),I.lc(58," operator of an interceptor."),I.Ib(),I.Jb(59,"h4",13),I.Jb(60,"span"),I.lc(61,"Pipes"),I.Ib(),I.Ib(),I.Jb(62,"p"),I.lc(63,"Pipes follow the standard global to controller to route bound sequence, with the same first in first out in regards to the "),I.Jb(64,"code"),I.lc(65,"@usePipes()"),I.Ib(),I.lc(66," parameters. However, at a route parameter level, if you have multiple pipes running, they will run in the order of the last parameter with a pipe to the first. This also applies to the route level and controller level pipes. For example, if we have the following controller:"),I.Ib(),I.Jb(67,"pre"),I.Jb(68,"code",9),I.lc(69,"\n@UsePipes(GeneralValidationPipe)\n@Controller('cats')\nexport class CatsController {\n  constructor(private catsService: CatsService) {}\n\n  @UsePipes(RouteSpecificPipe)\n  @Patch(':id')\n  updateCat(\n    @Body() body: UpdateCatDTO,\n    @Param() params: UpdateCatParams,\n    @Query() query: UpdateCatQuery,\n  ) {\n    return this.catsService.updateCat(body, params, query);\n  }\n}\n"),I.Ib(),I.Ib(),I.Jb(70,"p"),I.lc(71,"then the "),I.Jb(72,"code"),I.lc(73,"GeneralValidationPipe"),I.Ib(),I.lc(74," will run for the "),I.Jb(75,"code"),I.lc(76,"query"),I.Ib(),I.lc(77,", then the "),I.Jb(78,"code"),I.lc(79,"params"),I.Ib(),I.lc(80,", and then the "),I.Jb(81,"code"),I.lc(82,"body"),I.Ib(),I.lc(83," objects before moving on to the "),I.Jb(84,"code"),I.lc(85,"RouteSpecificPipe"),I.Ib(),I.lc(86,", which follows the same order. If any parameter-specific pipes were in place, they would run (again, from the last to first parameter) after the controller and route level pipes."),I.Ib(),I.Jb(87,"h4",14),I.Jb(88,"span"),I.lc(89,"Filters"),I.Ib(),I.Ib(),I.Jb(90,"p"),I.lc(91,"Filters are the only component that do not resolve global first. Instead, filters resolve from the lowest level possible, meaning execution starts with any route bound filters and proceeding next to controller level, and finally to global filters. Note that exceptions cannot be passed from filter to filter; if a route level filter catches the exception, a controller or global level filter cannot catch the same exception. The only way to achieve an effect like this is to use inheritance between the filters."),I.Ib(),I.Jb(92,"blockquote",10),I.Jb(93,"strong"),I.lc(94,"Hint"),I.Ib(),I.lc(95," Filters are only executed if any uncaught exception occurs during the request process. Caught exceptions, such as those caught with a "),I.Jb(96,"code"),I.lc(97,"try/catch"),I.Ib(),I.lc(98," will not trigger Exception Filters to fire. As soon as an uncaught exception is encountered, the rest of the lifecycle is ignored and the request skips straight to the filter.\n"),I.Ib(),I.Jb(99,"h4",15),I.Jb(100,"span"),I.lc(101,"Summary"),I.Ib(),I.Ib(),I.Jb(102,"p"),I.lc(103,"In general, the request lifecycle looks like the following:"),I.Ib(),I.Jb(104,"ol"),I.Jb(105,"li"),I.lc(106,"Incoming request"),I.Ib(),I.Jb(107,"li"),I.lc(108,"Globally bound middleware"),I.Ib(),I.Jb(109,"li"),I.lc(110,"Module bound middleware"),I.Ib(),I.Jb(111,"li"),I.lc(112,"Global guards"),I.Ib(),I.Jb(113,"li"),I.lc(114,"Controller guards"),I.Ib(),I.Jb(115,"li"),I.lc(116,"Route guards"),I.Ib(),I.Jb(117,"li"),I.lc(118,"Global interceptors (pre-controller)"),I.Ib(),I.Jb(119,"li"),I.lc(120,"Controller interceptors (pre-controller)"),I.Ib(),I.Jb(121,"li"),I.lc(122,"Route interceptors (pre-controller)"),I.Ib(),I.Jb(123,"li"),I.lc(124,"Global pipes"),I.Ib(),I.Jb(125,"li"),I.lc(126,"Controller pipes"),I.Ib(),I.Jb(127,"li"),I.lc(128,"Route pipes"),I.Ib(),I.Jb(129,"li"),I.lc(130,"Route parameter pipes"),I.Ib(),I.Jb(131,"li"),I.lc(132,"Controller (method handler)"),I.Ib(),I.Jb(133,"li"),I.lc(134,"Service (if exists)"),I.Ib(),I.Jb(135,"li"),I.lc(136,"Route interceptor (post-request)"),I.Ib(),I.Jb(137,"li"),I.lc(138,"Controller interceptor (post-request)"),I.Ib(),I.Jb(139,"li"),I.lc(140,"Global interceptor (post-request)"),I.Ib(),I.Jb(141,"li"),I.lc(142,"Exception filters (route, then controller, then global)"),I.Ib(),I.Jb(143,"li"),I.lc(144,"Server response"),I.Ib(),I.Ib(),I.Ib())},directives:[J.a,h.f],encapsulation:2,changeDetection:0}),b),q=I.Lb(C),M=[{path:"global-prefix",component:v,data:{title:"Global prefix - FAQ"}},{path:"hybrid-application",component:k,data:{title:"Hybrid application - FAQ"}},{path:"multiple-servers",component:H,data:{title:"HTTPS & Multiple Servers - FAQ"}},{path:"http-adapter",component:x,data:{title:"HTTP adapter - FAQ"}},{path:"request-lifecycle",component:C,data:{title:"Request lifecycle - FAQ"}},{path:"common-errors",component:g,data:{title:"Common errors - FAQ"}}],j=((d=function t(){e(this,t)}).\u0275mod=I.Eb({type:d}),d.\u0275inj=I.Db({factory:function(e){return new(e||d)},imports:[[u.b,f.a,h.g.forChild(M)]]}),d)}}])}();